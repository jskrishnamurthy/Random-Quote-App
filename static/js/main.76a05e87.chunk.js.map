{"version":3,"sources":["index.js"],"names":["QuoteMachine","props","_this","Object","C_Users_jkrishnamurthy_quote_machine_fcc_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_jkrishnamurthy_quote_machine_fcc_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_jkrishnamurthy_quote_machine_fcc_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","quote","author","getQuoteFromAPI","bind","C_Users_jkrishnamurthy_quote_machine_fcc_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","_this2","fetch","proxyUrl","cache","then","response","json","jsonData","setState","content","title","regex","RegExp","tweetLink","replace","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","id","dangerouslySetInnerHTML","__html","onClick","href","target","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8KAIMA,qBACF,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,MAAO,GACPC,OAAO,IAEZT,EAAKU,gBAAkBV,EAAKU,gBAAgBC,KAArBV,OAAAW,EAAA,EAAAX,CAAAD,IACvBA,EAAKU,kBAPUV,iFAmBC,IAAAa,EAAAV,KAIfW,MAAMC,oGAAqB,CAAEC,MAAO,WACnCC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAACG,GACHP,EAAKQ,SAAS,CACVb,MAAQY,EAAS,GAAGE,QACpBb,OAAQW,EAAS,GAAGG,2CAK5B,IAAIC,EAAQ,IAAIC,OAAO,kBACnBC,EAAY,8EAAgFvB,KAAKI,MAAMC,MAAMmB,QAAQH,EAAM,IAEjI,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYC,GAAG,aAC5BJ,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,OAAKE,GAAG,OAAOC,wBAAyB,CAAEC,OAAQ/B,KAAKI,MAAMC,SAC7DoB,EAAAC,EAAAC,cAAA,KAAGE,GAAG,UAAN,UAAuB7B,KAAKI,MAAME,QAClCmB,EAAAC,EAAAC,cAAA,UAAQE,GAAG,YAAYG,QAAShC,KAAKO,iBAArC,iBACAkB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGE,GAAG,cAAcI,KAAMV,EAAWW,OAAO,UAA5C,iBA5CiBC,IAAMC,YAoDjCC,IAASC,OACLb,EAAAC,EAAAC,cAAChC,EAAD,MACA4C,SAASC,eAAe","file":"static/js/main.76a05e87.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass QuoteMachine extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            quote: '',\r\n            author:''\r\n        }\r\n       this.getQuoteFromAPI = this.getQuoteFromAPI.bind(this); \r\n       this.getQuoteFromAPI();\r\n\r\n    }\r\n    //componentDidMount() {\r\n    //    const script = document.createElement(\"script\");\r\n    \r\n    //    script.src =\r\n     //     \"https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js\";\r\n     //   script.async = true;\r\n    \r\n    //    document.body.appendChild(script);\r\n   //  }\r\n    getQuoteFromAPI () {\r\n        //e.preventDefault();\r\n        var proxyUrl = 'https://cors-anywhere.herokuapp.com/';\r\n        let endPoint = \"https://quotesondesign.com/wp-json/posts?filter[orderby]=rand\";\r\n        fetch(proxyUrl + endPoint, { cache: \"reload\" })\r\n        .then(response => response.json())\r\n        .then((jsonData) => {\r\n            this.setState({\r\n                quote : jsonData[0].content,\r\n                author: jsonData[0].title\r\n            })\r\n        });\r\n    }\r\n    render() {\r\n        let regex = new RegExp(/(<p>)|(\\/p>)/gi);\r\n        let tweetLink = \"https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=\" + this.state.quote.replace(regex,\"\");\r\n        \r\n      return (\r\n        <div className=\"quote-box\" id=\"quote-box\">\r\n          <h1>Quote For Thought!</h1>\r\n          <div id=\"text\" dangerouslySetInnerHTML={{ __html: this.state.quote }}></div>\r\n          <p id=\"author\">Author:{this.state.author}</p>\r\n          <button id=\"new-quote\" onClick={this.getQuoteFromAPI} >Get New Quote</button>\r\n          <br />\r\n          <a id=\"tweet-quote\" href={tweetLink} target=\"_blank\">Tweet</a>   \r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <QuoteMachine />,\r\n    document.getElementById('root')\r\n  );\r\n  "],"sourceRoot":""}